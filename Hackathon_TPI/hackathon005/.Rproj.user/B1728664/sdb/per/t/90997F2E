{
    "collab_server" : "",
    "contents" : "\nshinyServer(function(input, output) {\n  \n  CostMap <- reactive({\n    index = input$ZIPCODE==cordData[,2]\n    input_center_lon = cordData[index,3][1]\n    input_center_lat = cordData[index,4][1]\n    \n    selectData = regData[regData[,3]==input$checkType,]\n    postLevs = get_Levs(selectData[,1])\n    totalCost = get_Cost(selectData,postLevs,cordData)\n    map <- get_map(location = c(input_center_lon,input_center_lat), zoom = input$center_zoom, maptype = \"roadmap\", language = \"zh-TW\")\n    return(list(map,totalCost))\n  })\n  \n  output$scatterMap <- renderPlot({\n    ggmap(CostMap()[[1]]) + geom_point(aes(x = lon, y = lat, size = COST), data = CostMap()[[2]], colour = \"red\", alpha=0.6)\n  }, height = 600, width = 800)\n  \n  output$denMap <- renderPlot({\n    ggmap(CostMap()[[1]]) + stat_density2d(\n      aes(x = lon, y = lat),\n      data = CostMap()[[2]]\n    )\n  }, height = 600, width = 800)\n  \n  output$pie_message <- renderUI({\n    HTML(\n      paste(\n        \"Note:\",\n        \"\\u4f4e\\u58d3\\u96fb\\u529b: \\u5c0f\\u578b\\u88fd\\u9020\\u696d\",\n        \"\\u9ad8\\uff06\\u7279\\u9ad8\\u58d3\\u96fb\\u529b: \\u5de5\\u696d\",\n        \"\\u8868\\u71c8\\u975e\\u71df\\u696d\\u7528: \\u6c11\\u751f\\u7528\\u96fb\",\n        \"\\u81e8\\u6642\\u7528\\u96fb: \\u81e8\\u6642\\u7528\\u96fb\",\n        \"\\u8868\\u71c8\\u71df\\u696d\\u7528: \\u5546\\u5bb6\\u7528\\u96fb\",\n        \"\\u4f4e\\u58d3\\u7d9c\\u5408\\u975e\\u71df\\u696d\\u7528\\u96fb: \\u516c\\u5171\\u8a2d\\u65bd\",\n        \"\\u4f4e\\u58d3\\u7d9c\\u5408\\u71df\\u696d\\u7528\\u96fb: \\u5546\\u5bb6\\u7528\\u96fb\",\n        sep=\"<br/>\"\n      )\n    )\n  })\n  \n  output$future <- renderPlot({\n    data = cbind(future_pred, future_pred[,2]-future_pred[,3])\n    data[,4] = scale(data[,4])\n    ggplot(data, aes(x=data[,1],y=data[,4])) + geom_bar(stat='identity',position='dodge') + xlab(\"Date\") + ylab(\"Variance(scaled)\")\n    \n  })\n  \n  output$checkType_pie <- renderPlot({\n    pieData = data.frame(\n      sum(regData[grepl(\"13\\u4f4e\\u58d3\\u96fb\\u529b\\u5c0f\\u8a08\",regData[,3]),6]),\n      sum(regData[grepl(\"16\\u9ad8\\uff06\\u7279\\u9ad8\\u58d3\\u96fb\\u529b\\u5c0f\\u8a08\",regData[,3]),6]),\n      sum(regData[grepl(\"1\\u8868\\u71c8\\u975e\\u71df\\u696d\\u7528\",regData[,3]),6]),\n      sum(regData[grepl(\"22\\u81e8\\u6642\\u7528\\u96fb\\u5c0f\\u8a08\",regData[,3]),6]),\n      sum(regData[grepl(\"2\\u8868\\u71c8\\u71df\\u696d\\u7528\",regData[,3]),6]),\n      sum(regData[grepl(\"6\\u4f4e\\u58d3\\u7d9c\\u5408\\u975e\\u71df\\u696d\\u7528\\u96fb\\u5c0f\\u8a08\",regData[,3]),6]),\n      sum(regData[grepl(\"9\\u4f4e\\u58d3\\u7d9c\\u5408\\u71df\\u696d\\u7528\\u96fb\\u5c0f\\u8a08\",regData[,3]),6])\n    )\n    names(pieData) = c(\n      \"\\u5c0f\\u578b\\u88fd\\u9020\\u696d\",\n      \"\\u5de5\\u696d\",\n      \"\\u6c11\\u751f\\u7528\\u96fb\",\n      \"\\u81e8\\u6642\\u7528\\u96fb\",\n      \"\\u5546\\u5bb6\\u7528\\u96fb\",\n      \"\\u516c\\u5171\\u8a2d\\u65bd\",\n      \"\\u5546\\u5bb6\\u7528\\u96fb\"\n    )\n    pie3D(t(pieData), labels=names(pieData), explode=0.05, main=\"\\u7528\\u96fb\\u6bd4\\u4f8b\\u5713\\u9905\\u5716\",\n          labelcex=1.2,col=c(\"blue\",\"red\",\"yellow\",\"lightgray\",\"darkgrey\",\"black\",\"green\")\n    )\n  })\n  \n  ##Merge from Sam\n  get_ctabel <- reactive({\n    ctabel = ctabel_preserve\n    index = ( grepl(paste(input$Area,collapse=\"|\",sep=\"\"), ctabel[,2]) )\n    #ctabel = ctabel[index,]\n    sctabel = ctabel[index,]\n    x<-names(ctabel)\n    \n    y<-x[1]  # names從一開始\n    column_count <- length(ctabel) # 計算 column 與 count 個數。\n    row_count<-dim(ctabel)  #計算多少筆\n    Total_record<-row_count[1]\n    \n    real_Record<-as.numeric(Total_record)\n    # 測試資料用2015-06-01  aa<-ctabel[1:real_aab,2]  # [筆數,欄位],4表示分四類\n    \n    return(sctabel)\n    \n  })\n  \n  # output$address <- renderDataTable({\n  #   \n  #   \n  # })\n  \n  output$address <- renderTable({\n    #data.frame(ctabel)\n    temp = get_ctabel()[,1:3]\n    names(temp) = c(\"\\u55ae\\u4f4d\",\"\\u5730\\u5740\",\"\\u96fb\\u8a71\")\n    rownames(temp) = c(1:nrow(temp))\n    temp\n  })\n  \n  output$Servicelocal <- renderPlot({\n    #uv <- read.csv(\"001.csv\")\n    \n    map <- get_map(location = 'Taiwan', zoom = 8, language=\"zh-TW\", maptype=\"roadmap\")\n    # map<-map + geom_point(aes(x = lon, y = lat),data=ctabel)\n    ggmap(map) + geom_point(aes(x = lon, y = lat),data=get_ctabel(), colour=\"red\", alpha=\"0.6\")\n    \n  })\n  \n  \n  #Tab 2\n  output$ManPower <- renderPlot({\n    \n    Gov_Man<-c(4478,5416,2627,287,4,0)\n    Normal_Man<-c(458,3598,3778,5610,392,108)\n    databar=rbind(Gov_Man,Normal_Man)\n    par(family=('Heiti TC Light'))\n    barplot(databar,names.arg = c(\"碩士\",\"大學\",\"專科\",\"高中\",\"中學\",\"小學\"),beside = TRUE,\n            main=\"台電人員學歷統計表\",xlab = \"紅色表示公務人員/藍色僱員\",ylab=\"人數\",col=c(\"red\",\"blue\"))\n    legend(x=\"topleft\",rownames(ManPower),fill=c(\"red\",\"blue\"))\n    \n  })\n  \n  output$ManPower3D <- renderPlot({\n    ManTotal<-c(4936,9014,6405,5897,396,108)\n    par(family=('Heiti TC Light'))\n    pie3D(ManTotal,labels=c(\"碩士\",\"大學\",\"專科\",\"高中\",\"中學\",\"小學\"),explode=0.05,\n          main=\"3D 台電人員學歷比例圖\",labelcex=0.8,col=c(\"blue\",\"red\",\"yellow\",\"lightgray\",\"darkgrey\",\"black\"))\n    \n  })\n  \n  #Tab 3\n  \n  output$DistMRT <- renderPlot({\n    A_select <- input$Area1\n    tarr <- target\n    tarr3 <- target[target$Area==A_select,]\n    if (A_select==0){tarr3 <- target}\n    \n    NearCrit <- input$Distnce\n    tarr3$DistNear <- ifelse(tarr3$distMRT<NearCrit,TRUE,FALSE)\n    TT <- t.test(MetPr~DistNear,tarr3, paired=FALSE)\n    box <- ggplot(data=tarr3 ,aes(x=DistNear , y=MetPr,fill = DistNear)) \n    box <- box + geom_boxplot(outlier.size = 2, outlier.shape = 1,outlier.colour = \"gray\",position = \"dodge\",colour = \"#666666\",width = 0.5)\n    box <- box + labs(x = \"Near MRT or Not\", y = \"Per Ping price (10K)\", title = paste0(ifelse(A_select==0,\"Taipei\",AreaList[as.numeric(A_select)]),\" Near MRT vs. Far: 1033 to 1053\"))\n    box\n  })\n  ##End merge\n  \n})\n",
    "created" : 1470547974397.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1134116430",
    "id" : "90997F2E",
    "lastKnownWriteTime" : 1470564043,
    "last_content_update" : 1470564043965,
    "path" : "C:/Users/KuangYu/Desktop/hackathon002/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}