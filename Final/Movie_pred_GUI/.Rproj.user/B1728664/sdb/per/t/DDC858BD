{
    "collab_server" : "",
    "contents" : "#\n# This is the server logic of a Shiny web application. You can run the \n# application by clicking 'Run App' above.\n#\n# Find out more about building applications with Shiny here:\n# \n#    http://shiny.rstudio.com/\n#\n\ntest = test_AAPL(AAPL,np=npval)\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n  output$Genre_rank <- renderPlot({\n    h1 = t(data.frame(data.frame(table(test[[2]]$Genre[test[[2]]$Y==input$r_bins]))[2],\n                      data.frame(table(test[[2]]$Genre[test[[2]]$svm.pred==input$r_bins]))[2]))\n    lbel = t(data.frame(table(test[[2]]$Genre[test[[2]]$Y==input$r_bins]))[1])\n    barplot(h1,\n            names.arg = lbel,\n            col=c('green','red'),\n            xlab=\"Genre\", ylab=\"Number\", \n            main=paste(\"Pred Box(red) vs Box(green)\\n\",\"precision: \",test[[1]]),\n            legend = c(\"Real\",\"Predict\"),beside=TRUE,\n            args.legend = list(title = \"Color\", x = \"topright\", cex = .7)\n    )\n  })\n  \n  output$Dist_rank <- renderPlot({\n    h2 = t(data.frame(data.frame(table(test[[2]]$Distrubutor[test[[2]]$Y==input$r_bins]))[2],\n                      data.frame(table(test[[2]]$Distrubutor[test[[2]]$svm.pred==input$r_bins]))[2]))\n    lbel = t(data.frame(table(test[[2]]$Distrubutor[test[[2]]$Y==input$r_bins]))[1])\n    barplot(h2,\n            names.arg = lbel,\n            col=c('green','red'),\n            xlab=\"Distrubutor\", ylab=\"Number\", \n            main=paste(\"Pred Box(red) vs Box(green)\\n\",\"precision: \",test[[1]]),\n            legend = c(\"Real\",\"Predict\"),beside=TRUE,\n            args.legend = list(title = \"Color\", x = \"topright\", cex = .7)\n    )\n  })\n  \n  output$YtB_rank <- renderPlot({\n    plot(x=test[[2]]$Youtube.Views,y=test[[2]]$Y,xlab=\"Youtube\",ylab=\"Rank\", main=\"Youtube vs Box\", col='green')\n  })\n  \n  output$Mon <- renderPlot({\n    h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==input$r_bins]))[2],\n                      data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==input$r_bins]))[2]))\n    lbel = t(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==input$r_bins]))[1])\n    barplot(h2,\n            names.arg = lbel,\n            col=c('green','red'),\n            xlab=\"Month\", ylab=\"Number\", \n            main=paste(\"Pred Box(red) vs Box(green)\\n\",\"precision: \",test[[1]]),\n            legend = c(\"Real\",\"Predict\"),beside=TRUE,\n            args.legend = list(title = \"Color\", x = \"topright\", cex = .7)\n    )\n  })\n  \n  output$LEN <- renderPlot({\n    plot(x=test[[2]]$Y,y=test[[2]]$Runtime,xlab=\"Rank\", ylab=\"Runtime\", main=\"Runtime vs Box\", col='green')\n  })\n  \n  output$MPAA_rank <- renderPlot({\n    h2 = t(data.frame(data.frame(table(test[[2]]$MPAA[test[[2]]$Y==input$r_bins]))[2],\n                      data.frame(table(test[[2]]$MPAA[test[[2]]$svm.pred==input$r_bins]))[2]))\n    lbel = t(data.frame(table(test[[2]]$MPAA[test[[2]]$Y==input$r_bins]))[1])\n    barplot(h2,\n            names.arg = lbel,\n            col=c('green','red'),\n            xlab=\"MPAA\", ylab=\"Number\", \n            main=paste(\"Pred Box(red) vs Box(green)\\n\",\"precision: \",test[[1]]),\n            legend = c(\"Real\",\"Predict\"),beside=TRUE,\n            args.legend = list(title = \"Color\", x = \"topright\", cex = .7)\n    )\n  })\n  \n  output$MPAA3D <- renderPlot({\n    #plot3d(test[[2]]$Genre, test[[2]]$MPAA, test[[2]]$Y, main=\"3D scatterplot\", pch=16, highlight.3d = TRUE, type=\"h\", col=c('red','green','blue'))\n    scatterplot3d(test[[2]]$Genre, test[[2]]$MPAA, test[[2]]$Y,main=\"3D scatterplot\", pch=16, highlight.3d = TRUE, type=\"p\")\n  })\n  \n  output$make_pred <- renderText({\n    #print(typeof(input$Distrubutor))\n    pred_data = data.frame(input$Distrubutor,input$Month,input$Genre,input$Rtime,input$MPAA,input$Y_views,0)\n    names(pred_data) = names(AAPL)\n    AAPL = rbind(AAPL, pred_data)\n    pred_result = predict(test[[3]], AAPL[nrow(AAPL),-7])\n    print(paste(\"Possiable rank:\",as.numeric(pred_result)))\n    #print(paste(input$Y_views,input$Rtime,input$Month,input$MPAA,input$Distrubutor,input$Genre))\n  })\n  \n})\n",
    "created" : 1469119393189.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1926039450",
    "id" : "DDC858BD",
    "lastKnownWriteTime" : 1469166300,
    "last_content_update" : 1469166300058,
    "path" : "~/R_P/Movie_pred_GUI/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}