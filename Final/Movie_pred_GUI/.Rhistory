list("January"="January",
"February"="February",
"March"="March",
"April"="April",
"May"="May",
"June"="June",
"July"="July",
"August"="August",
"September"="September",
"October"="October",
"November"="November",
"December"="December",
"Unknown"="")
testlist = list("January"="January",
"February"="February",
"March"="March",
"April"="April",
"May"="May",
"June"="June",
"July"="July",
"August"="August",
"September"="September",
"October"="October",
"November"="November",
"December"="December",
"Unknown"="")
testlist
names(testlist)
shiny::runApp()
library(shiny)
library('e1071')
library(plyr)
library(rgl)
library(scatterplot3d)
library(TESTSVM)
AAPL = LOAD_AAPL()
View(AAPL)
testlist = list(count(AAPL$Genre)[1])
testlist
names(testlist)
names(testlist) = t(count(AAPL$Genre)[1])
names(testlist) = count(AAPL$Genre)[1]
names(testlist)
testlist
names(testlist) = count(AAPL$Genre)[2]
names(testlist)
names(testlist) = count(AAPL$Genre)[1]
names(testlist)
names(testlist) = as.character(count(AAPL$Genre)[1])
names(testlist)
names(testlist) = as.matrix(count(AAPL$Genre)[1])
names(testlist) = as.data.frame(count(AAPL$Genre)[1])
names(testlist)
testlist = list(count(AAPL$Genre)[1])
names(testlist) = c(1:65)
names(testlist) = c("1:65")
names(testlist)
names(testlist) = c(1:65)
name(testlist)
names(testlist[[1]])
names(testlist[[1]]) = "test"
names(testlist[[1]])
testlist = list(count(AAPL$Genre)[1])
length(testlist)
length(testlist[])
nrow(testlist)
ncol(testlist)
testlist = list(count(AAPL$Genre)[1])
testlist
testlist = list(count(AAPL$Genre)[1])
testlist = list(count(AAPL$Genre)[1])
testlist = list(count(AAPL$Genre)[1])
names(testlist[[1]])
names(testlist[[2]])
names(testlist[[1]])
testlist[[2]]
testlist[[1]]
testlist = count(AAPL$Genre)[1]
testlist = as.list(testlist)
testlist = list("January"="January",
"February"="February",
"March"="March",
"April"="April",
"May"="May",
"June"="June",
"July"="July",
"August"="August",
"September"="September",
"October"="October",
"November"="November",
"December"="December",
"Unknown"="")
testlist = list(t(count(AAPL$Genre)[1]))
testlist
testlist = list("January"="January",
"February"="February",
"March"="March",
"April"="April",
"May"="May",
"June"="June",
"July"="July",
"August"="August",
"September"="September",
"October"="October",
"November"="November",
"December"="December",
"Unknown"="")
testlist = count(AAPL$Genre)[1]
View(testlist)
testlist = count(AAPL$Genre)[1]
testlist = t(count(AAPL$Genre)[1])
testlist = data.frame(t(count(AAPL$Genre)[1]))
names(testlist)
names(testlist) = t(count(AAPL$Genre)[1])
View(testlist)
testlist = as.list(testlist)
testlist
testlist[[1]]
testlist = list(t(count(AAPL$Genre)[1]))
testlist = data.frame(t(count(AAPL$Genre)[1]))
testlist = as.list(testlist)
tesetlist
testlist
testlist = list(1:65)
as.list(c(1,2,3))
testlist = list(t(count(AAPL$Genre)[1]))
testlist = list(as.vector(count(AAPL$Genre)[1]))
testlist = list(c(1:65))
testlist = as.list(c(1:65))
testlist = as.list(as.vector(count(AAPL$Genre)[1]))
testlist = as.list(c(count(AAPL$Genre)[1]))
testlist = as.list(c(1:65))
names(testlist) = count(AAPL$Genre)[1]
names(testlist)
names(testlist) = t(count(AAPL$Genre)[1])
names(testlist)
testlist = as.list(t(count(AAPL$Genre)[1]))
testlist = as.list(t(count(AAPL$Genre)[1]))
testlist
testlist = as.list(t(count(AAPL$Genre)[1]))
testlist = as.list(t(count(AAPL$Genre)[1]))
testlist = as.list(t(count(AAPL$Genre)[1]))
names(testlist) = t(count(AAPL$Genre)[1])
names(testlist)
testlist = as.list(t(count(AAPL$Genre)[1]))
names(testlist) = t(count(AAPL$Genre)[1])
testlist = as.list(t(count(AAPL$Genre)[1]))
View(AAPL)
test_AAPL
View(AAPL)
runApp()
runApp()
choices = function()
{
testlist = as.list(t(count(AAPL$Distrubutor)[1]))
names(testlist) = t(count(AAPL$Distrubutor)[1])
return(testlist)
}
choices
choices()
runApp()
choices = chifun <- function()
{
testlist = as.list(t(count(AAPL$MPAA)[1]))
names(testlist) = t(count(AAPL$MPAA)[1])
return(testlist)
}
runApp()
runApp()
View(AAPL)
test = test_AAPL(AAPL)
test[[3]]
runApp()
runApp()
runApp()
runApp()
runApp()
View(AAPL)
runApp()
runApp()
test_AAPL
runApp()
View(AAPL)
runApp()
runApp()
test[[3]]
test_AAPL
runApp()
runApp()
runApp()
LOAD_AAPL
runApp()
typeof(AAPL$Genre)
View(AAPL)
typeof(AAPL$Distrubutor)
typeof(AAPL$Distrubutor[1])
typeof(AAPL$Distrubutor[2])
as.integer(AAPL$Distrubutor)
as.integer(AAPL$Distrubutor[1])
typeof(AAPL$Distrubutor)
typeof(AAPL$Distrubutor[1])
is.factor(AAPL$Distrubutor)
is.integer(AAPL$Distrubutor)
is.integer(AAPL$Distrubutor[1])
is.factor(AAPL$Distrubutor[1])
as.factor(AAPL$Distrubutor)
as.factor(AAPL$Distrubutor[1])
runApp()
runApp()
tMPAA = factor(AAPL$MPAA[2], labels=levels(AAPL$MPAA))
tMPAA = factor(c(AAPL$MPAA[2]), labels=levels(AAPL$MPAA))
View(AAPL)
testframe = data.frame("Buena Vista", "December", "Sci-Fi Fantasy", 100, "PG", 1.0, 3)
View(testframe)
AAPL = rbind(AAPL,testframe)
names(testframe) = names(AAPL)
AAPL = rbind(AAPL,testframe)
View(AAPL)
runApp()
nrow(AAPL)
AAPL[nrow(AAPL),]
runApp()
test[[2]]
View(test[[2]])
pred_data = data.frame(input$Distrubutor,input$Month,input$Genre,input$Rtime,input$MPAA,input$Y_views,0)
names(pred_data) = names(AAPL)
AAPL = rbind(AAPL, pred_data)
runApp()
pred_result = predict(test[[3]], AAPL[nrow(AAPL),-7])
pred_result
pred_result
pred_result[[1]]
pred_result[1]
runApp()
pred_result = predict(test[[3]], AAPL[nrow(AAPL),-7])
as.numeric(pred_result)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print(as.numeric(pred_result))
pred_result = predict(test[[3]], AAPL[nrow(AAPL),-7])
pred_result
runApp()
runApp()
View(AAPL)
runApp()
h2 = t(data.frame(data.frame(table(test[[2]]$Runtime[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Runtime[test[[2]]$svm.pred==3]))[2]))
table(test[[2]]$Runtime[test[[2]]$Y==3])
table(test[[2]]$Runtime[test[[2]]$Y==3])
table(test[[2]]$Runtime[test[[2]]$Y==3])
table(test[[2]]$Runtime[test[[2]]$svm.pred==3]
)
h1 = t(data.frame(data.frame(table(test[[2]]$Genre))[2],
data.frame(table(test[[2]]$Genre))[2]))
View(h1)
t1 = table(ifelse(test[[2]]$Y==3, test[[2]]$Genre, 0))
t2 = table(ifelse(test[[2]]$svm.pred==3, test[[2]]$Genre, 0))
t1 = table(ifelse(test[[2]]$Y==3, test[[2]]$Genre, 0))
t1 = table(ifelse(test[[2]]$Y==3, test[[2]]$Genre, 0))
t2 = table(ifelse(test[[2]]$svm.pred==3, test[[2]]$Genre, 0))
t1
t2
test[[2]]$Y==3
table(test[[2]]$Genre[test[[2]]$Y==input$r_bins])
table(test[[2]]$Genre[test[[2]]$Y==3])
table(test[[2]]$Genre[test[[2]]$Y])
table(test[[2]]$Genre)
table(test[[2]]$Genre)
levels(test[[2]]$Y==3)
levels(test[[2]]$Genre[test[[2]]$Y==3])
t1 = table(test[[2]]$Genre)
t1 = table(test[[2]]$Genre[test[[2]]==levels(test[[2]]$Genre[test[[2]]$Y==3])])
t1 = table(test[[2]]$Genre[test[[2]]==levels(test[[2]]$Genre[test[[2]]$Y==3])])
t2 = table(test[[2]]$Genre[test[[2]]==levels(test[[2]]$Genre[test[[2]]$svm.pred==3])])
t1 = table(test[[2]]$Distrubutor[test[[2]]==levels(test[[2]]$Distrubutor[test[[2]]$Y==3])])
t2 = table(test[[2]]$Distrubutor[test[[2]]==levels(test[[2]]$Distrubutor[test[[2]]$svm.pred==3])])
test[[2]]==levels(test[[2]]$Distrubutor[test[[2]]$Y==3])
levels(test[[2]]$Distrubutor[test[[2]]$Y==3])
t1 = table(test[[2]]$Distrubutor)
t1
t1 = data.frame(table(test[[2]]$Distrubutor))
View(t1)
t1 = data.frame(table(test[[2]]$Distrubutor))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==3]), t1$Freq, 0)
t1 = data.frame(table(test[[2]]$Distrubutor))
View(t1)
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==3]), t1$Freq, 0)
t1 = data.frame(table(test[[2]]$Distrubutor))
t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==3])
t1$Var1!=levels(test[[2]]$Distrubutor[test[[2]]$Y==3])
t1 = t2 = data.frame(table(test[[2]]$Distrubutor))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==3]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$svm.pred==3]), t1$Freq, 0)
t1$Freq!=t2$Freq
t1 = t2 = data.frame(table(test[[2]]$Distrubutor))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==3]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$svm.pred==3]), t1$Freq, 0)
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1 = t2 = data.frame(table(test[[2]]$Distrubutor))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==1]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$svm.pred==1]), t1$Freq, 0)
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1 = t2 = data.frame(table(test[[2]]$Distrubutor))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$Y==4]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Distrubutor[test[[2]]$svm.pred==4]), t1$Freq, 0)
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
h1 = t(data.frame(data.frame(table(test[[2]]$Genre[test[[2]]$Y==input$r_bins]))[2],
data.frame(table(test[[2]]$Genre[test[[2]]$svm.pred==input$r_bins]))[2]))
h1 = t(data.frame(data.frame(table(test[[2]]$Genre[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Genre[test[[2]]$svm.pred==3]))[2]))
View(h1)
t1 = t2 = data.frame(table(test[[2]]$Genre))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==4]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$svm.pred==4]), t1$Freq, 0)
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
h1 = t(data.frame(data.frame(table(test[[2]]$Genre[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Genre[test[[2]]$svm.pred==3]))[2]))
View(h1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==4]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$svm.pred==4]), t1$Freq, 0)
View(h1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
t1$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==4]), t1$Freq, 0)
t2$Freq = ifelse(t1$Var1==levels(test[[2]]$Genre[test[[2]]$svm.pred==4]), t1$Freq, 0)
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1$Var1
levels(test[[2]]$Genre[test[[2]]$Y==4]
)
t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==4]
)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
View(t1)
View(t1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
t1$Freq[t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==3])] = 0
t2$Freq[t2$Var1==levels(test[[2]]$Genre[test[[2]]$svm.pred==3])] = 0
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
t1$Freq[t1$Var1==levels(test[[2]]$Genre[test[[2]]$Y==1])] = 0
t2$Freq[t2$Var1==levels(test[[2]]$Genre[test[[2]]$svm.pred==1])] = 0
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
t1$Freq[t1$Var1!=levels(test[[2]]$Genre[test[[2]]$Y==1])] = 0
t2$Freq[t2$Var1!=levels(test[[2]]$Genre[test[[2]]$svm.pred==1])] = 0
h1 = t(data.frame(t1[2],t2[2]))
View(h1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre))
View(h1)
View(t1)
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre[test[[2]]$Y==3]))
View(t2)
View(t1)
t1 = data.frame(table(test[[2]]$Genre))
t1 = data.frame(table(test[[2]]$Genre))
t2 = data.frame(table(test[[2]]$Genre[test[[2]]$Y==3]))
t1 = data.frame(table(test[[2]]$Distrubutor))
t2 = data.frame(table(test[[2]]$Distrubutor[test[[2]]$Y==3]))
t1 = data.frame(table(test[[2]]$Distrubutor))
t2 = data.frame(table(test[[2]]$Distrubutor[test[[2]]$Y==5]))
t1 = data.frame(table(test[[2]]$Distrubutor))
t2 = data.frame(table(test[[2]]$Distrubutor[test[[2]]$Y==5]))
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
barplot(h2,
names.arg = t(count(AAPL$Release.Date)[1]),
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
View(h2)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3])),
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
View(h2)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3])),
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
View(h2)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3])),
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
barplot(h2[-1,],
names.arg = h1[1,],
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3])),
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
barplot(h2[-1],
names.arg = h1[1],
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
barplot(h2,
names.arg = t(count(AAPL$Release.Date)[1]),
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
t(count(AAPL$Release.Date)[1])
lbel = data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[1]
View(lbel)
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
lbel = data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[1]
barplot(h2,
names.arg = lbel,
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
t(count(AAPL$Release.Date)[1])
data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[1]
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
lbel = t(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[1])
barplot(h2,
names.arg = t(count(AAPL$Release.Date)[1]),
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
lbel
h2 = t(data.frame(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[2],
data.frame(table(test[[2]]$Release.Date[test[[2]]$svm.pred==3]))[2]))
lbel = t(data.frame(table(test[[2]]$Release.Date[test[[2]]$Y==3]))[1])
barplot(h2,
names.arg = lbel,
col=c('green','red'),
xlab="Genre", ylab="Number",
main=paste("Pred Box(red) vs Box(green)\n","precision: ",test[[1]]),
legend = c("Real","Predict"),beside=TRUE,
args.legend = list(title = "Color", x = "topright", cex = .7)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='peter0749',
token='5956EAE4E7F0AC5D7794ACBE188D6C70',
secret='swFk2xs/DZyN+JRu0xUirEYO6hl6Xw1WJOVTUFml')
library(rsconnect)
rsconnect::setAccountInfo(name='peter0749',
token='5956EAE4E7F0AC5D7794ACBE188D6C70',
secret='swFk2xs/DZyN+JRu0xUirEYO6hl6Xw1WJOVTUFml')
library(rsconnect)
rsconnect::deployApp()
deployApp()
library(rsconnect)
deployApp()
shiny::runApp()
runApp()
library(rsconnect)
deployApp()
shiny::runApp()
runApp()
install.packages("shinyRGL")
shiny::runApp()
library(rsconnect)
deployApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
LOAD_AAPL = function(np=0.2)
)
runApp()
runApp()
source('~/R_P/Movie_pred_GUI/svm_pred.R', echo=TRUE)
shiny::runApp()
shiny::runApp()
library(rsconnect)
deployApp()
